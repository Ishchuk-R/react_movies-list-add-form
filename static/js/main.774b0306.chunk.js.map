{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/MovieItem/MovieItem.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","MovieItem","state","error","handleBlurInput","props","name","value","match","setState","handleChangeInput","e","target","this","placeholder","onChange","onBlur","type","Component","NewMovie","isDisabled","handleSubmit","preventDefault","addMovie","handleChangeForm","onSubmit","disabled","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.774b0306.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieItem.scss';\n\nexport class MovieItem extends Component {\n  state = {\n    error: false,\n  };\n\n  handleBlurInput = () => {\n    const patternValidation = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    if (this.props.name === 'description') {\n      return;\n    }\n\n    if (this.props.name === 'imgUrl' || this.props.name === 'imdbUrl') {\n      if (!this.props.value.match(patternValidation)) {\n        this.setState({\n          error: true,\n        });\n      }\n    }\n\n    if (!this.props.value) {\n      this.setState({\n        error: true,\n      });\n    }\n  }\n\n  handleChangeInput = (e) => {\n    const { name, value } = e.target;\n\n    this.setState({\n      error: false,\n    });\n\n    this.props.handleChangeInput(name, value);\n  }\n\n  render() {\n    const { name, value } = this.props;\n    const { error } = this.state;\n\n    return (\n      <label className=\"form-item\">\n        <input\n          name={name}\n          value={value}\n          placeholder={name}\n          className={this.state.error ? 'error' : ''}\n          onChange={this.handleChangeInput}\n          onBlur={this.handleBlurInput}\n          type=\"text\"\n        />\n        {error ? (\n          <div>\n            Please enter the correct value for\n            {name}\n          </div>\n        ) : null}\n      </label>\n    );\n  }\n}\n\nMovieItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  handleChangeInput: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { MovieItem } from '../MovieItem';\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    isDisabled: true,\n  };\n\n  handleChangeInput = (name, value) => {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.addMovie({\n      title: this.state.title,\n      description: this.state.description,\n      imgUrl: this.state.imgUrl,\n      imdbUrl: this.state.imdbUrl,\n      imdbId: this.state.imdbId,\n    });\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  }\n\n  handleChangeForm = () => {\n    if (this.state.title\n        && this.state.imgUrl\n        && this.state.imdbUrl\n        && this.state.imdbId) {\n      this.setState({\n        isDisabled: false,\n      });\n    }\n  }\n\n  render() {\n    return (\n      <form onChange={this.handleChangeForm} onSubmit={this.handleSubmit}>\n        <MovieItem\n          name=\"title\"\n          value={this.state.title}\n          handleChangeInput={this.handleChangeInput}\n        />\n        <MovieItem\n          name=\"description\"\n          value={this.state.description}\n          handleChangeInput={this.handleChangeInput}\n        />\n        <MovieItem\n          name=\"imgUrl\"\n          value={this.state.imgUrl}\n          handleChangeInput={this.handleChangeInput}\n        />\n        <MovieItem\n          name=\"imdbUrl\"\n          value={this.state.imdbUrl}\n          handleChangeInput={this.handleChangeInput}\n        />\n        <MovieItem\n          name=\"imdbId\"\n          value={this.state.imdbId}\n          handleChangeInput={this.handleChangeInput}\n        />\n        <button\n          disabled={this.state.isDisabled}\n          type=\"submit\"\n          className=\"btn\"\n        >\n          Add New Movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [\n        ...state.movies,\n        movie,\n      ],\n    }));\n  }\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}